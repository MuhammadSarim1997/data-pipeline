version: '3'

services:
  source_postgres:
    image: postgres:15
    ports:
      - "5433:5432"
    networks:
      - elt_network
    env_file:
      - .env
    environment:
      POSTGRES_DB: source_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  destination_postgres:
    image: postgres:15
    ports:
      - "5434:5432"
    networks:
      - elt_network
    env_file:
      - .env
    environment:
      POSTGRES_DB: destination_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    

  postgres: 
    image: postgres:15
    networks:
      - elt_network
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${AIRFLOW_DB_NAME}
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASSWORD}
  
  init-airflow: 
    image: apache/airflow:2.8.1
    networks:
      - elt_network
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      # AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      # AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres/${AIRFLOW_DB_NAME}
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username \$AIRFLOW_USERNAME --password \$AIRFLOW_PASSWORD --firstname John --lastname Doe --role Admin --email admin@example.com"
    
  webserver:
    build: 
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_started
      init-airflow:
        condition: service_started
      source_postgres:
        condition: service_healthy
      destination_postgres:
        condition: service_healthy
    networks:
      - elt_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/opt/dbt
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      LOAD_EX: n
      EXECUTOR: Local
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres/${AIRFLOW_DB_NAME}
      AIRFLOW__FERNET__KEY: ${FERNET_KEY}
      AIRFLOW__WEBSERVER__DEFAULT__USER__USERNAME: ${AIRFLOW_DB_USER}
      AIRFLOW__WEBSERVER__DEFAULT__USER__PASSWORD: ${AIRFLOW_PASSWORD}
      AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_DB_USER}
      AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    ports:
        - "8080:8080"
    command: webserver

  scheduler:
    build: 
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_started
      init-airflow:
        condition: service_started
      source_postgres:
        condition: service_healthy
      destination_postgres:
        condition: service_healthy
    networks:
      - elt_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/opt/dbt
      - ./scripts:/opt/airflow/scripts
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      LOAD_EX: n
      EXECUTOR: Local
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres/${AIRFLOW_DB_NAME}
      AIRFLOW__FERNET__KEY: ${AIRFLOW_FERNET_KEY}
      AIRFLOW__WEBSERVER__DEFAULT__USER__USERNAME: ${AIRFLOW_DB_USER}
      AIRFLOW__WEBSERVER__DEFAULT__USER__PASSWORD: ${AIRFLOW_PASSWORD}
      AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_DB_USER}
      AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${POSTGRES_PASSWORD}
    command: scheduler


networks:
  elt_network:
    name: elt_network
    driver: bridge


volumes:
  destination_db_data: